{"version":3,"sources":["components/Buttons/Buttons.jsx","components/counterPropTypes.jsx","components/Counter/Counter.jsx","App.js","index.js"],"names":["Button","PropTypes","string","isRequired","func","name","callback","className","type","onClick","Counter","state","x","addOne","setState","add100","increase","this","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"gPAgBeA,GCbPC,IAAUC,OAAOC,WACbF,IAAUG,KAAKD,W,MDAZ,SAAC,GAAD,IAAGE,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACb,4BACEC,UAAU,SACVC,KAAK,SACLC,QAASH,GAERD,KE8CUK,G,kNAnDbC,MAAQ,CACNC,EAAG,G,EAGLC,OAAS,WACP,EAAKC,UAAS,SAAAH,GAAK,MAAK,CAAEC,EAAGD,EAAMC,EAAI,O,EAGzCG,OAAS,WACP,EAAKD,UAAS,SAAAH,GAAK,MAAK,CAAEC,EAAGD,EAAMC,EAAI,S,EAGzCI,SAAW,WACL,EAAKL,MAAMC,EAAI,IAAM,GACvB,EAAKC,SACL,EAAKE,UAEL,EAAKF,U,4CAIT,WACE,IAAQD,EAAMK,KAAKN,MAAXC,EAER,OACE,yBAAKL,UAAU,aACb,qCAGGK,GAGH,yBAAKL,UAAU,+BACb,kBAAC,EAAD,CACED,SAAUW,KAAKJ,OACfR,KAAK,YAEP,kBAAC,EAAD,CACEC,SAAUW,KAAKF,OACfV,KAAK,YAEP,kBAAC,EAAD,CACEC,SAAUW,KAAKD,SACfX,KAAK,kB,GA5CKa,IAAMC,YCGbC,EAJH,kBACV,kBAAC,EAAD,OCAFC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c418e2ef.chunk.js","sourcesContent":["import React from 'react';\nimport { counterPropTypes } from '../counterPropTypes';\nimport './Button.scss';\n\nconst Button = ({ name, callback }) => (\n  <button\n    className=\"button\"\n    type=\"button\"\n    onClick={callback}\n  >\n    {name}\n  </button>\n);\n\nButton.propTypes = counterPropTypes;\n\nexport default Button;\n","import PropTypes from 'prop-types';\n\nexport const counterPropTypes = {\n  name: PropTypes.string.isRequired,\n  callback: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Button from '../Buttons/Buttons';\nimport './Counter.scss';\n\nclass Counter extends React.Component {\n  state = {\n    x: 0,\n  }\n\n  addOne = () => {\n    this.setState(state => ({ x: state.x + 1 }));\n  };\n\n  add100 = () => {\n    this.setState(state => ({ x: state.x + 100 }));\n  };\n\n  increase = () => {\n    if (this.state.x % 5 === 0) {\n      this.addOne();\n      this.add100();\n    } else {\n      this.addOne();\n    }\n  };\n\n  render() {\n    const { x } = this.state;\n\n    return (\n      <div className=\"calculate\">\n        <h1>\n          Count:\n          {\n           x\n          }\n        </h1>\n        <div className=\"calculate__container-button\">\n          <Button\n            callback={this.addOne}\n            name=\"add one\"\n          />\n          <Button\n            callback={this.add100}\n            name=\"add 100\"\n          />\n          <Button\n            callback={this.increase}\n            name=\"increse\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import React from 'react';\nimport Counter from './components/Counter/Counter';\n\nconst App = () => (\n  <Counter />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}